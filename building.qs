// –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å —Å—Ç—Ä–æ–µ–Ω–∏—è
class Building {
	name() {
		return "";
	}
	constructor(id){
		this.level = 0;
		this.build_progress = 0;
		this.chat_id = id;
	}
	load(o) {
		for (const [key, value] of Object.entries(o)) {
			if (typeof value == 'object') {
				this[key].load(value);
			} else {
				this[key] = value;
			}
		}
	}
	step(bs) { // —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π timerDone
		if (this.build_progress > 0) {
			this.build_progress -= bs;
			//print(`build=${this.build_progress}`)
			if (this.build_progress <= 0) {
				this.level += 1;
				this.build_progress = 0;
				Telegram.send(this.chat_id, this.name() + " - —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ");
			}
		}
	}
	build(money) {
		if (money >= this.cost()) {
			if (this.build_progress == 0) {
				money -= this.cost();
				this.build_progress = this.buildTime();
				Telegram.send(this.chat_id, "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –Ω–∞—á–∞–ª–æ—Å—å");
			} else {
				Telegram.send(this.chat_id, `–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –µ—â—ë –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ, –æ—Å—Ç–∞–ª–æ—Å—å - ${this.build_progress}üõ†`);
			}
		} else {
			Telegram.send(this.chat_id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥");
		}
		return money;
	}
	buildTime() {
		return Math.floor((this.level+2*Math.pow(Math.sin(this.level), 3))*100+10);
	}
	cost() {
		return 0;
	}
	isBuilding() {
		return this.build_progress != 0;
	}
	infoHeader() {
		return `${this.name()} —É—Ä. ${this.level}\n`;
	}
	infoFooter() {
		let msg = `(${this.cost()}üí∞ ${this.buildTime()}‚è≥)\n`;
		if (this.build_progress > 0) msg += `    –ò–¥—ë—Ç üõ†—Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ, –æ—Å—Ç–∞–ª–æ—Å—å ${this.build_progress}‚è≥\n`;
		return msg;
	}
}
