include("weapons.qs")

// –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –∫–æ—Ä–∞–±–ª—è
class Ship {
	constructor(){
		this.count = 0;
		this.hp = this.health();
		this._weapon();
	}
	load(o) {
		for (const [key, value] of Object.entries(o)) {
			if (key == "wp") this.wp.load(value);
			else this[key] = value;
		}
	}
	name() {return "";}
	shortName() {return "";}
	description() {return "";}
	
	size    () {return 1;} // size in angar
	capacity() {return 0;} // max cargo
	price   () {return 0;} // each resource
	energy  () {return 0;} // launch price
	level   () {return 1;} // requred spaceyard level
	is_enemy() {return false;}
	
	health  () {return 1;}
	cur_health() {
		if (this.count == 0) return 0;
		else return this.hp + (this.count-1)*this.health();
	}
	armor   () {return 0;} // damage reduction
	_weapon () {this.wp = new Weapon(0,0);}
	peaceful() {return this.wp.count == 0;}
	damage  () {return this.count*this.wp.damage1()+getRandom(this.count*this.wp.damage2()-this.count*this.wp.damage1()+1);}
	
	info(detail) {
		let msg = `${this.name()}: ${this.count} —à—Ç.\n`
		if (detail) {
			msg += `  ${this.description()}\n`;
			msg += `  –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: ${this.capacity()}üì¶\n`;
			msg += `  —ç–Ω–µ—Ä–≥–∏—è –ø—É—Å–∫–∞: ${this.energy()}üîã\n`;
		}
		return msg;
	}
	
	infoBattle(bt) {
		let nm = this.shortName();
		if (bt) return this.name() + " " + this.count + "—à—Ç";
		let cn = `${this.count}‚úàÔ∏è${this.hp}‚ù§Ô∏è (${this.wp.info()}üó°)`;
		//cn = cn.padEnd(18);
		return `${nm}: ${cn}`;
	}
}


class TradeShip extends Ship {
	name() {return "–ì—Ä—É–∑–æ–≤–∏–∫";}
	shortName() {return "–ì—Ä";}
	description() {return "–¢–æ—Ä–≥–æ–≤—ã–π –∫–æ—Ä–∞–±–ª—å";}
	size    () {return 2;}
	capacity() {return 100;}
	price   () {return 100;}
	energy  () {return 100;}
	
	health  () {return 20;}
}

class SmallShip extends Ship {
	name() {return "–ú–∞–ª—é—Ç–∫–∞";}
	shortName() {return "–ú–ª";}
	description() {return "–ö–æ—Ä–∞–±–ª—å –æ–±—â–µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è";}
	capacity() {return 2;}
	price   () {return 10;}
	energy  () {return 10;}
	
	_weapon () {this.wp = new LaserWeapon(1, 1);}
	health  () {return 4;}
}

class InterceptorShip extends Ship {
	name() {return "–ü–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫";}
	shortName() {return "–ü—Ö";}
	description() {return "–ú–∞–ª—ã–π –Ω–∞—Å—Ç—É–ø–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ—Ä–∞–±–ª—å";}
	size    () {return 2;}
	capacity() {return 0;}
	price   () {return 100;}
	energy  () {return 100;}
	level   () {return 2;}
	
	_weapon () {this.wp = new LaserWeapon(8, 1);}
	health  () {return 20;}
}

class CorvetteShip extends Ship {
	name() {return "–ö–æ—Ä–≤–µ—Ç";}
	shortName() {return "–ö–≤";}
	description() {return "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ—Ä–∞–±–ª—å";}
	size    () {return 4;}
	capacity() {return 10;}
	price   () {return 250;}
	energy  () {return 200;}
	level   () {return 3;}
	
	_weapon () {this.wp = new LaserWeapon(2, 4);}
	armor   () {return 10;}
	health  () {return 200;}
}

class FrigateShip extends Ship {
	name() {return "–§—Ä–µ–≥–∞—Ç";}
	shortName() {return "–§—Ä";}
	description() {return "–°—Ä–µ–¥–Ω–∏–π –±–æ–µ–≤–æ–π –∫–æ—Ä–∞–±–ª—å";}
	size    () {return 5;}
	capacity() {return 20;}
	price   () {return 500;}
	energy  () {return 400;}
	level   () {return 3;}
	
	_weapon () {this.wp = new LaserWeapon(6, 4);}
	armor   () {return 5;}
	health  () {return 100;}
}

class CruiserShip extends Ship {
	name() {return "–ö—Ä–µ–π—Å–µ—Ä";}
	shortName() {return "–ö—Ä";}
	description() {return "–ö—Ä—É–ø–Ω—ã–π –±–æ–µ–≤–æ–π –∫–æ—Ä–∞–±–ª—å";}
	size    () {return 6;}
	capacity() {return 0;}
	price   () {return 1000;}
	energy  () {return 500;}
	level   () {return 4;}
	
	_weapon () {this.wp = new LaserWeapon(2, 16);}
	armor   () {return 20;}
	health  () {return 500;}
}


function ShipModels() {return [new TradeShip(), new SmallShip(), new InterceptorShip(),
							   new CorvetteShip(), new FrigateShip(), new CruiserShip()]}

const ShipsDescription = function() {
	let msg = "\n<b> ‚úàÔ∏è –ú–æ–¥–µ–ª–∏ –∫–æ—Ä–∞–±–ª–µ–π ‚úàÔ∏è </b>\n";
	for (const s of ShipModels()) {
		msg += `<b>${s.name()}:</b>\n`
		msg += `  ${s.description()}\n`;
		msg += `  —Å–ª–æ—Ç—ã: ${s.size()}\n`;
		msg += `  –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: ${s.capacity()}üì¶\n`;
		msg += `  —ç–Ω–µ—Ä–≥–∏—è –ø—É—Å–∫–∞: ${s.energy()}üîã\n`;
		msg += `  ${s.health()}‚ù§Ô∏è\n`;
		msg += `  –≤–æ–æ—Ä—É–∂–µ–Ω–∏–µ: ${s.wp.description()}\n`;
		msg += `  —É—Ä–æ–Ω: ${s.wp.info()}üó°\n`;
		msg += `  –±—Ä–æ–Ω—è: ${s.armor()}üõ°\n`;
		//msg += `  ${s.health()}‚ù§Ô∏è ${s.attack()}‚öîÔ∏è ${s.defence()}üèÉ\n`;
		//msg += `  ${s.damage().x}d${s.damage().d}üó° ${s.armor()}üõ°\n`;
		msg += "  —Å—Ç–æ–∏–º–æ—Å—Ç—å: ";
		for (let i = 0; i < Resources_base; i++) msg += getResourceCount(i, s.price());
		msg += "\n";
		msg += `  –≤—Ä–µ–º—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞: ${time2text(s.price()*Resources_base)}\n`;
		msg += `  —Ç—Ä–µ–±–µ—É—Ç—Å—è üèó–í–µ—Ä—Ñ—å ${s.level()} —É—Ä–æ–≤–Ω—è\n`;
	}
	return msg;
}();

class EnemyJunior extends Ship {
	name() {return "EnemyJunior";}
	shortName() {return "EJ";}
	description() {return "";}
	size    () {return 1;}
	capacity() {return 0;}
	price   () {return 0;}
	energy  () {return 0;}
	is_enemy() {return true;}
	
	armor   () {return 1;}
	health  () {return 2;}
	_weapon () {this.wp = new LaserWeapon(1, 1);}
}

class EnemyMiddle extends Ship {
	name() {return "EnemyMiddle";}
	shortName() {return "EM";}
	description() {return "";}
	size    () {return 3;}
	capacity() {return 0;}
	price   () {return 2;}
	energy  () {return 0;}
	is_enemy() {return true;}
	
	armor   () {return 4;}
	health  () {return 40;}
	_weapon () {this.wp = new LaserWeapon(2, 2);}
}

class EnemySenior extends Ship {
	name() {return "EnemySenior";}
	shortName() {return "ES";}
	description() {return "";}
	size    () {return 10;}
	capacity() {return 0;}
	price   () {return 100;}
	energy  () {return 0;}
	is_enemy() {return true;}
	
	armor   () {return 10;}
	health  () {return 400;}
	_weapon () {this.wp = new LaserWeapon(2, 4);}
}

function enemyShips() {return [new EnemyJunior(), new EnemyMiddle(), new EnemySenior()]}
